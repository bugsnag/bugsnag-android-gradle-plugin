// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
    }

    dependencies {
        def agpVersion = System.env.AGP_VERSION ?: "7.0.0-beta04"
        classpath "com.android.tools.build:gradle:${agpVersion}"
        classpath "com.bugsnag:bugsnag-android-gradle-plugin:9000.0.0-test"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.bugsnag.android.gradle'

allprojects {
    repositories {
        mavenCentral()
        google()
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(name: 'android-lib-release', ext: 'aar')
    implementation(name: 'bugsnag-android-ndk-release', ext: 'aar')
    implementation(name: 'bugsnag-android-release', ext: 'aar')
    implementation(name: 'bugsnag-android-unity-release', ext: 'aar')
    implementation(name: 'bugsnag-plugin-android-anr-release', ext: 'aar')
}

android {
    compileSdkVersion 29
    ndkVersion "16.1.4479499"
    buildToolsVersion '30.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        applicationId 'com.bugsnag.example'

        if ("true" != System.env.UNITY_ABI_SPLITS) {
            ndk {
                abiFilters 'armeabi-v7a', 'x86'
            }
        }

        versionCode 1
        versionName '1.0'
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb']
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
            jniDebuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
        doNotStrip '*/x86/*.so'
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }

    // conditionally enable ABI splits
    if ("true" == System.env.UNITY_ABI_SPLITS) {
        splits {
            abi {
                reset()
                include("armeabi-v7a", "x86_64")
                universalApk false
                enable true
            }
        }
    }

    // conditionally enable flavor splits
    if ("true" == System.env.UNITY_FLAVORS) {
        flavorDimensions "regular"

        productFlavors {
            foo {
            }
            bar {
            }
        }
    }
}

bugsnag {
    endpoint = "http://localhost:9339"
    releasesEndpoint = "http://localhost:9339"
}
